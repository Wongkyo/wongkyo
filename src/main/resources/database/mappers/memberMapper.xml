<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
   <mapper namespace="com.to.t1.member.MemberMapper">

		<!-- 회원가입 -->
		<insert id="memberRegister">
	   			INSERT into member(userId, userPw, name, phone, email, adress, gender, birth )
	   			VALUES (#{userId}, #{userPw}, #{name}, #{phone}, #{email}, #{adress}, #{gender}, #{birth})
		</insert>

		<!-- 아이디 중복 확인 -->
		<!-- count로 유저아이디의 값이 1인지 0인지 확인 -->
		<select id="idCheck" parameterType="String" resultType="Integer">
		        SELECT count(*)
		        FROM member
		        WHERE userId = #{userId}
	    </select>
	    
		<!-- 로그인 -->
		<!-- 멤버 아이디와 멤버 비밀번호가 일치할시 로그인 -->
		<!-- 회원가입과 로그인시 사진을 위해 joinfilesVO와 resultMap으로 연결 -->
		<select id="memberLogin" parameterType="MemberVO" resultMap="memberLoginResult">
				select M.*, JF.* 
				from member M left join joinfiles JF
				on M.userId = JF.userId
				where M.userId=#{userId} and M.userPw=#{userPw}
		</select>
	
		<!-- 회원 + 회원사진 테이블 -->
		<resultMap type="MemberVO" id="memberLoginResult">
			<id property="userId" column="userId" />
			<result property="userPw" column="userPw"/>
			<result property="name" column="name"/>
			<result property="email" column="email"/>
			<result property="gender" column="gender"/>
			<result property="adress" column="adress"/>
			<result property="phone" column="phone"/>
			<result property="birth" column="birth"/>
			<association property="joinFileVO" javaType="JoinFileVO" resultMap="memberFileResult">
			</association>
		</resultMap>
	
		<resultMap type="JoinFileVO" id="memberFileResult">
			<id property="userId" column="userId"/>
			<result property="fileName" column="fileName"/>
			<result property="oriName" column="oriName"/>
		</resultMap>
		
		<!-- 회원사진파일, fileNum은 autoincrement이므로 생략 -->
		<insert id="setFileInsert" parameterType="JoinFileVO">
				insert into joinfiles (userId, fileName, oriName) 
				values(#{userId}, #{fileName}, #{oriName})
		</insert>

		<!-- 회원 정보 수정 -->
		<!-- 회원의 아이디가 일치할 시 즉 로그인 상태일시 회원정보 수정 -->
		<update id="memberUpdate" parameterType="MemberVO">
				update member set userPw=#{userPw}, name=#{name}, gender=#{gender}, phone=#{phone},
				email=#{email}, adress=#{adress}, birth=#{birth} where userId=#{userId}
		</update>

		<!-- 회원 정보 삭제 -->		
		<!-- 회원의 아이디가 일치할 시 즉 로그인 상태일시 회원정보 삭제 -->		
		<delete id="memberDelete" parameterType="MemberVO">
				delete from member 
				where userId=#{userId} and userPw=#{userPw}
		</delete>
		
		<!-- 회원 목록 -->
		<!-- 현재는 목록만 추후에 목록에서 수정하는 admin 따로 만들고 목록에서 수정예정 -->
		<select id="getList" resultType="MemberVO" parameterType="MemberVO">
				select *
				from member
		</select>

 	

	</mapper>